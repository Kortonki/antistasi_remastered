#include "defines.hpp"
#include "hpp_macros.hpp"
#include "dialogs.hpp"

author="Kortonki";
OnLoadName = "Kortonki's Antistasi";
OnLoadMission = "Be a Resistance Leader - Be Badass";
loadScreen = "pic.jpg";

overviewText = "You are the commander of a newly established faction that aims to control the island.<br/><br/>Distribute pamphlets, help civilians, gather foreign support, steal supplies, attack convoys, assassinate officers, take bases, and much more to do to ultimately drive the invaders out of the island.<br/><br/>Main features:<br/>- multiplayer support: play with your friends, with or without a dedicated server.<br/>- persistent save: games are saved persistently to a file or ingame.<br/>- arsenal management: your arsenal is limited. Scavenge to succeed.<br/>- highly performant: reported +200 AIs with 5 players.<br/>- supports ACE, CUPS, RHS, VCOM.<br/><br/>Meta discussion: this is a fork of Antistasi whose code was greatly optimized, improved and simplified to be easily ported to different mods (e.g. RHS, CUPS), maps (Altis, Tanoa), missions, etc.<br/>See more details at <a href='https://github.com/LordGolias/antistasi'>Github</a>";
overviewPicture = "pic.jpg";

allowFunctionsLog = 1;
enableDebugConsole = 1;

respawn = "BASE";
respawnDelay = 60;
respawnVehicleDelay = 120;
respawnDialog = 1;
respawnOnStart = -1; // never run onPlayerRespawn. initialization/client.sqf handles this.
aiKills = 0;
disabledAI=1;
Saving = 1;
showCompass=1;
showRadio=1;
showGPS=1;
showMap=1;
showBinocular=1;
showNotepad=1;
showWatch=1;
debriefing=1;

//showGroupIndicator = 1;

class CfgTaskEnhancements
    {
    enable       = 1;            //0: disable new task features (default), 1: enable new task features & add new task markers and task widgets into the map
    3d           = 1;            //0: do not use new 3D markers (default), 1: replace task waypoints with new 3D markers
    3dDrawDist   = 3500;        //3d marker draw distance (default: 2000)
    share        = 1;            //0: do not count assigned players (default), 1: count how many players have the task assigned
    propagate    = 1;            //0: do not propagate (default), 1: propagate shared tasks to subordinates
    };


class Header
{
gameType = COOP;
minplayers=1;
maxplayers=50;
};

class CfgSounds
{

    sounds[] = {};
    class fire
    {
        name="fire";
        sound[]={"music\fire.ogg",db+12,1.0};
        titles[]={};
    };

    class ofp1
    {
      name="ofp1";
      sound[]={"music\ofp1.ogg", 30, 1, 1, 100};
      titles[]={};

    };
};

class CfgDebriefing
{
	class End1
	{
		title = "V I C T O R Y";
		subtitle = "The island is ours!";
		description = "The population loves you!<br/>The FIA brave soldiers proved their valour. A deserved rest in a Greek island, drinking with Petros.";
		picture = "n_inf";
		pictureColor[] = {0.0,0.5,0.0,1};
	};
    class destroyedCities
    {
        title = "The island is Destroyed";
        subtitle = "The island was destroyed by CSAT";
        description = "Eight cities were destroyed by CSAT.<br/>Nobody wants to live here.";
        picture = "b_unknown";
        pictureColor[] = {0.5,0.0,0.0,1};
    };
    class invalidConfiguration
    {
        title = "You do not have the same mods as the server";
        subtitle = "";
        description = "Server maybe using ACE/RHS/CUP and you not or vice-versa. Clients must use the same server mods as the server.";
        picture = "b_unknown";
    };
};

class Params {

  class StartingHR
  {
    title = "HR at start"; // Param name visible in the list
    values[] = {-1, 0,1,5,10,20,50}; // Values; must be integers; has to have the same number of elements as 'texts'
    texts[] = {"Random","0","1","5","10","20","50"}; // Description of each selectable item
    default = 10; // Default value; must be listed in 'values' array, otherwise 0 is used
    // Default values that are not whole numbers do not work. Param will default to 0 (or 1 if defined)
  };

  class StartingMoney
  {
    title = "Money at start"; // Param name visible in the list
    values[] = {-1, 0,50,100,200,1000,5000,10000}; // Values; must be integers; has to have the same number of elements as 'texts'
    texts[] = {"Random","0","50","100","200","1000","5000","10000"}; // Description of each selectable item
    default = 1000; // Default value; must be listed in 'values' array, otherwise 0 is used
    // Default values that are not whole numbers do not work. Param will default to 0 (or 1 if defined)
  };

  class StartingFuel
  {
    title = "Fuel reserves at start"; // Param name visible in the list
    values[] = {-1, 0,10,50,100,200,1000,5000,10000}; // Values; must be integers; has to have the same number of elements as 'texts'
    texts[] = {"Random","0","10","50","100","200","1000","5000","10000"}; // Description of each selectable item
    default = 100; // Default value; must be listed in 'values' array, otherwise 0 is used
    // Default values that are not whole numbers do not work. Param will default to 0 (or 1 if defined)
  };

  class StartingNS
  {
    title = "Foreign support at start"; // Param name visible in the list
    values[] = {-1, 0,5,10,20,50,100}; // Values; must be integers; has to have the same number of elements as 'texts'
    texts[] = {"Random","0","5","10","20","50","100"}; // Description of each selectable item
    default = 5; // Default value; must be listed in 'values' array, otherwise 0 is used
    // Default values that are not whole numbers do not work. Param will default to 0 (or 1 if defined)
  };

  class upFreq
  {
    title = "Update interval";
    values[] = {300, 600, 1200, 3600};
    texts[] = {"Fast", "Classic", "Slower", "Marathon"};
    default = 600;
  };

    #include "aceSettings.hpp"


};

class cfgRemoteExec {
    #include "cfgRemoteExec.hpp"
};

class cfgFunctions {
    #include "database\cfgFunctions.hpp"
    #include "dictionary\cfgFunctions.hpp"
    #include "location\cfgFunctions.hpp"
    #include "scheduler\cfgFunctions.hpp"
    #include "debug\cfgFunctions.hpp"
    #include "spawn\cfgFunctions.hpp"
    #include "mission\cfgFunctions.hpp"
    #include "movement\cfgFunctions.hpp"
    #include "players\cfgFunctions.hpp"
    #include "medical\cfgFunctions.hpp"
    #include "aaf_arsenal\cfgFunctions.hpp"
    #include "fia_arsenal\cfgFunctions.hpp"
    #include "fuel\cfgFunctions.hpp"
    #include "weather\cfgFunctions.hpp"

    #include "cfgFunctions.hpp"
};
